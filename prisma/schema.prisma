generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model course {
  id                         String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                       String                  @db.VarChar(255)
  educational_institution_id String                  @db.Uuid
  educational_institution    educational_institution @relation(fields: [educational_institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  learning_path              learning_path[]
  progress_report            progress_report[]
  student_course             student_course[]
  teacher_course             teacher_course[]
}

model educational_institution {
  id      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name    String    @db.VarChar(255)
  user_id String    @db.Uuid
  course  course[]
  user    user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student student[]
  teacher teacher[]
}

model learning_path {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String                  @db.VarChar(255)
  course_id             String                  @db.Uuid
  course                course                  @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student_learning_path student_learning_path[]
}

model parent {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String  @db.Uuid
  student_id String  @db.Uuid
  student    student @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model progress_report {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  student_id String  @db.Uuid
  course_id  String  @db.Uuid
  progress   Int
  course     course  @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student    student @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model student {
  id                         String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                    String                  @db.Uuid
  educational_institution_id String                  @db.Uuid
  parent                     parent[]
  progress_report            progress_report[]
  educational_institution    educational_institution @relation(fields: [educational_institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                       user                    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student_course             student_course[]
  student_learning_path      student_learning_path[]
}

model student_course {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  student_id String  @db.Uuid
  course_id  String  @db.Uuid
  course     course  @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student    student @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model student_learning_path {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  student_id       String        @db.Uuid
  learning_path_id String        @db.Uuid
  learning_path    learning_path @relation(fields: [learning_path_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student          student       @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model teacher {
  id                         String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                    String                  @db.Uuid
  educational_institution_id String                  @db.Uuid
  educational_institution    educational_institution @relation(fields: [educational_institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                       user                    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teacher_course             teacher_course[]
}

model teacher_course {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  teacher_id String  @db.Uuid
  course_id  String  @db.Uuid
  course     course  @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teacher    teacher @relation(fields: [teacher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                   String                    @unique @db.VarChar(255)
  firstName               String?                   @db.VarChar(255)
  lastName                String?                   @db.VarChar(255)
  roq_user_id             String                    @db.VarChar(255)
  tenant_id               String                    @db.VarChar(255)
  educational_institution educational_institution[]
  parent                  parent[]
  student                 student[]
  teacher                 teacher[]
}
